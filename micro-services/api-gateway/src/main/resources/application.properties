

spring.application.name=api-gateway
server.port=${PORT:8001}
eureka.client.service-url.defaultZone=http://localhost:9000/eureka/

## user-service routes navigation
zuul.routes.user-service.path = /api/user-service/**
zuul.routes.user-service.service-id=user-service

# story-service routes navigation
zuul.routes.story-service.path = /api/story-service/**
zuul.routes.story-service.service-id=story-service

# comment-service routes navigation
zuul.routes.comment-service.path = /api/comment-service/**
zuul.routes.comment-service.service-id=comment-service

# web-service routes navigation
zuul.routes.web-service.path = /ui/**
zuul.routes.web-service.service-id=web-service

#zuul.host.socket-timeout-millis=30000

management.endpoints.web.exposure.include=*

spring.datasource.url=jdbc:mysql://localhost:3306/storyart_db?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=123456
## jwt secrect key: The secret key is combined with the header and the payload to create a unique hash. We are only able to verify this hash if you have the secret key.

jwt.secret = user-service
# this time equal to 7 days long , 7*24*60*60*1000
jwt.expirationInMs = 604800000

#`hibernate_sequence' doesn't exist (7*86400000)
spring.jpa.hibernate.use-new-id-generator-mappings=false

# drop n create table, good for testing, comment this in production
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto = none


eureka.instance.homePageUrl= http://${eureka.hostname}:${server.port}
eureka.instance.hostName=localhost
zuul.addProxyHeaders = true
zuul.ignoreSecurityHeaders= false
#override sensitive headers to avoid authorization left in ignoredHeaders
zuul.sensitiveHeaders=Cookie,Set-Cookie
zuul.host.socket-timeout-millis=300000


#eureka=
#instance=
#preferIpAddress=true
#client=
#registerWithEureka=true
#fetchRegistry=true



